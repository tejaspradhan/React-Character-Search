{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","character","id","alt","name","email","CardList","characters","map","chars","SearchBox","placeholder","handleChange","type","onChange","App","changeText","setState","string","state","searchField","fetch","then","response","json","users","this","filteredCharacters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,UAAUC,GAA1C,aACHC,IAAI,cAEN,6BAAKL,EAAMG,UAAUG,OACrB,8BACE,sBAAML,UAAU,QAAhB,wBACCD,EAAMG,UAAUI,aCTZC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,WAAWC,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CAAqBR,UAAWQ,GAArBA,EAAMP,UCJZQ,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,8BACE,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbP,KAAK,GACLF,GAAG,GACHY,SAAUF,QC2BHG,G,wDAlCb,aAAe,IAAD,8BACZ,gBAMFC,WAAa,WACX,EAAKC,SAAS,CAAEC,OAAQ,0BANxB,EAAKC,MAAQ,CACXZ,WAAY,GACZa,YAAa,IAJH,E,qDAUd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKR,SAAS,CAAEV,WAAYkB,S,oBAEjD,WAAU,IAAD,SAC6BC,KAAKP,MAAjCZ,EADD,EACCA,WAAYa,EADb,EACaA,YACdO,EAAqBpB,EAAWqB,QAAO,SAAC3B,GAAD,OAC3CA,EAAUG,KAAKyB,cAAcC,SAASV,EAAYS,kBAEpD,OACE,sBAAK9B,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oDACA,cAAC,EAAD,CACEY,YAAY,kBACZC,aAAc,SAACmB,GACb,EAAKd,SAAS,CAAEG,YAAaW,EAAEC,OAAOC,WAG1C,cAAC,EAAD,CAAU1B,WAAYoB,W,GA9BZO,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9e0d9152.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${props.character.id}?set=set1`}\n        alt=\"character\"\n      />\n      <h2>{props.character.name}</h2>\n      <p>\n        <span className=\"email\">Contact : </span>\n        {props.character.email}\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport { Card } from \"../card/card.component.jsx\";\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.characters.map((chars) => (\n        <Card key={chars.id} character={chars} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <div>\n      <input\n        className=\"search\"\n        type=\"search\"\n        placeholder={placeholder}\n        name=\"\"\n        id=\"\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component.jsx\";\nimport { SearchBox } from \"./components/search-box/search-box.component.jsx\";\nimport \"./App.css\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      characters: [],\n      searchField: \"\",\n    };\n  }\n  changeText = () => {\n    this.setState({ string: \"You clicked a button\" });\n  };\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ characters: users }));\n  }\n  render() {\n    const { characters, searchField } = this.state;\n    const filteredCharacters = characters.filter((character) =>\n      character.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Welcome To The Character Search Engine</h1>\n        <SearchBox\n          placeholder=\"Find Characters\"\n          handleChange={(e) => {\n            this.setState({ searchField: e.target.value });\n          }}\n        />\n        <CardList characters={filteredCharacters} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}